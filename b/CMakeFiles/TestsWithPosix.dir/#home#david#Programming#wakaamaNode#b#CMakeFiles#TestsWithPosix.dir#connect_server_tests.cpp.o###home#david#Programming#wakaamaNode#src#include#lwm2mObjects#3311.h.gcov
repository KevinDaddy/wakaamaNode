        -:    0:Source:/home/david/Programming/wakaamaNode/src/include/lwm2mObjects/3311.h
        -:    0:Graph:/home/david/Programming/wakaamaNode/b/CMakeFiles/TestsWithPosix.dir/connect_server_tests.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:#pragma once
        -:    2:// Automatically generated header file
        -:    3:
        -:    4:#include "lwm2m/objects.h"
        -:    5:namespace KnownObjects {
        -:    6:namespace id3311 {
        -:    7:// Custom, overrideable types for Opaque and String resources
        -:    8:
        -:    9:    #ifndef Colour3311
        -:   10:    class ColourType : public PreallocString<30> {};
        -:   11:    #endif
        -:   12:    
        -:   13:    #ifndef SensorUnits3311
        -:   14:    class SensorUnitsType : public PreallocString<30> {};
        -:   15:    #endif
        -:   16:    
        -:   17:
        -:   18:/* \brief Class for object 3311 - Light Control
        -:   19: *  Description: This Object is used to control a light source, such as a LED or other light.
        -:   20: *  It allows a light to be turned on or off and its dimmer setting to be control as a % between
        -:   21: *  0 and 100. An optional colour setting enables a string to be used to indicate the desired
        -:   22: *  colour.
        -:   23: */
        -:   24:class instance : public Lwm2mObjectInstance {
        -:   25:public:
        -:   26:
        -:   27:    // 5850 - This resource represents a light, which can be controlled, the setting of which is a Boolean value (1,0) where 1 is on and 0 is off.
        -:   28:    bool OnOff;
        -:   29:    
        -:   30:    // Optional resource
        -:   31:    // 5851 - This resource represents a light dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        -:   32:    int Dimmer;
        -:   33:    
        -:   34:    // Optional resource
        -:   35:    // 5852 - The time in seconds that the light has been on. Writing a value of 0 resets the counter.
        -:   36:    int OnTime;
        -:   37:    
        -:   38:    // Optional resource
        -:   39:    // 5805 - The total power in Wh that the light has used.
        -:   40:    float Cumulativeactivepower;
        -:   41:    
        -:   42:    // Optional resource
        -:   43:    // 5820 - The power factor of the light.
        -:   44:    float PowerFactor;
        -:   45:    
        -:   46:    // Optional resource
        -:   47:    // 5706 - A string representing a value in some color space
        -:   48:    ColourType Colour;
        -:   49:    
        -:   50:    // Optional resource
        -:   51:    // 5701 - If present, the type of sensor defined as the UCUM Unit Definition e.g. “Cel” for Temperature in Celcius.
        -:   52:    SensorUnitsType SensorUnits;
        -:   53:    
        -:   54:};
        -:   55:
        -:   56:enum class RESID {
        -:   57:    OnOff = 5850,
        -:   58:    Dimmer = 5851,
        -:   59:    OnTime = 5852,
        -:   60:    Cumulativeactivepower = 5805,
        -:   61:    PowerFactor = 5820,
        -:   62:    Colour = 5706,
        -:   63:    SensorUnits = 5701,
        -:   64:    
        -:   65:};
        -:   66:
        -:   67:/* \brief Class for object 3311 - Light Control
        -:   68: *  Description: This Object is used to control a light source, such as a LED or other light.
        -:   69: *  It allows a light to be turned on or off and its dimmer setting to be control as a % between
        -:   70: *  0 and 100. An optional colour setting enables a string to be used to indicate the desired
        -:   71: *  colour.
        -:   72: */
        -:   73:class object : public Lwm2mObject<3311, object, instance> {
        -:   74:public:
        -:   75:
        -:   76:    // 5850 - This resource represents a light, which can be controlled, the setting of which is a Boolean value (1,0) where 1 is on and 0 is off.
        -:   77:    Resource(5850, &instance::OnOff, O_RES_RW) OnOff;
        -:   78:    
        -:   79:    // Optional resource
        -:   80:    // 5851 - This resource represents a light dimmer setting, which has an Integer value between 0 and 100 as a percentage.
        -:   81:    Resource(5851, &instance::Dimmer, O_RES_RW) Dimmer;
        -:   82:    
        -:   83:    // Optional resource
        -:   84:    // 5852 - The time in seconds that the light has been on. Writing a value of 0 resets the counter.
        -:   85:    Resource(5852, &instance::OnTime, O_RES_RW) OnTime;
        -:   86:    
        -:   87:    // Optional resource
        -:   88:    // 5805 - The total power in Wh that the light has used.
        -:   89:    Resource(5805, &instance::Cumulativeactivepower, O_RES_R) Cumulativeactivepower;
        -:   90:    
        -:   91:    // Optional resource
        -:   92:    // 5820 - The power factor of the light.
        -:   93:    Resource(5820, &instance::PowerFactor, O_RES_R) PowerFactor;
        -:   94:    
        -:   95:    // Optional resource
        -:   96:    // 5706 - A string representing a value in some color space
        -:   97:    Resource(5706, &instance::Colour, O_RES_RW) Colour;
        -:   98:    
        -:   99:    // Optional resource
        -:  100:    // 5701 - If present, the type of sensor defined as the UCUM Unit Definition e.g. “Cel” for Temperature in Celcius.
        -:  101:    Resource(5701, &instance::SensorUnits, O_RES_R) SensorUnits;
        -:  102:    
        -:  103:};
        -:  104:
        -:  105:} // end of id namespace
        -:  106:} // end of KnownObjects namespace
        -:  107:inline bool operator== (KnownObjects::id3311::RESID c1, uint16_t c2) { return (uint16_t) c1 == c2; }
    #####:  108:inline bool operator== (uint16_t c2, KnownObjects::id3311::RESID c1) { return (uint16_t) c1 == c2; }
        -:  109:	
