        -:    0:Source:/home/david/Programming/wakaamaNode/test/helper/server.h
        -:    0:Graph:/home/david/Programming/wakaamaNode/b/CMakeFiles/TestsWithPosix.dir/helper/server.cpp.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:/*******************************************************************************
        -:    2: * Copyright (c) 2017-2018  David Graeff <david.graeff@web.de>
        -:    3: *
        -:    4: * Permission is hereby granted, free of charge, to any person obtaining a copy
        -:    5: * of this software and associated documentation files (the "Software"), to deal
        -:    6: * in the Software without restriction, including without limitation the rights
        -:    7: * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        -:    8: * copies of the Software, and to permit persons to whom the Software is
        -:    9: * furnished to do so, subject to the following conditions:
        -:   10: *
        -:   11: * The above copyright notice and this permission notice shall be included in
        -:   12: * all copies or substantial portions of the Software.
        -:   13: */
        -:   14:#pragma once
        -:   15:
        -:   16:#include <mutex>
        -:   17:#include <thread>
        -:   18:#include <string>
        -:   19:#include "../wakaama/liblwm2m.h"
        -:   20:
        -:   21:#include "../network/network_common.h"
        -:   22:#ifdef POSIX_NETWORK
        -:   23:#include <sys/epoll.h>
        -:   24:#endif
        -:   25:
        -:   26:class Lwm2mServer {
        -:   27:public:
        -:   28:    Lwm2mServer(std::mutex* mutex);
        -:   29:    ~Lwm2mServer();
        -:   30:    void init(bool useDtls);
        -:   31:    void release();
        -:   32:    void loop();
        -:   33:    std::string getConnectClientName() const;
    #####:   34:    inline void incClientUpdate() {++client_updated;}
        -:   35:public:
        -:   36:    lwm2m_context_t * server_context = nullptr;
        -:   37:    std::string connected_client_name;
        -:   38:    static const char PSK[];
        -:   39:    static unsigned short PSK_LEN;
        -:   40:    static const char PUBLICID[];
        -:   41:private:
        -:   42:    std::thread* thread = nullptr;
        -:   43:    std::mutex* mutex;
        -:   44:    int client_updated = 0;
        -:   45:    volatile bool server_running;
        -:   46:    #ifdef POSIX_NETWORK
        -:   47:    struct epoll_event ev;
        -:   48:    // Pipe to cancel the server thread
        -:   49:    int pfds[2]={0,0};
        -:   50:    #endif
        -:   51:};
